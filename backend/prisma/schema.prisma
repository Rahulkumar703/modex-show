// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Show {
  id         String    @id @default(uuid())
  name       String
  startTime  DateTime
  totalSeats Int
  endTime    DateTime
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  bookings   Booking[]

  @@unique([name, startTime])
}

model Booking {
  id               String         @id @default(uuid())
  bookingRequestId String
  bookingRequest   BookingRequest @relation(fields: [bookingRequestId], references: [id], onDelete: Cascade)
  seatNo           Int
  status           BookingStatus  @default(PENDING)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  show             Show?          @relation(fields: [showId], references: [id])
  showId           String?

  @@unique([bookingRequestId, seatNo])
}

model BookingRequest {
  id        String        @id @default(uuid())
  showId    String
  status    BookingStatus @default(PENDING)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  seats     Booking[]
}

enum BookingStatus {
  PENDING
  CONFIRMED
  FAILED
}
